"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidTokenService = exports.CategoryService = exports.PublishingService = exports.AuthorService = exports.ImageService = exports.BookService = exports.UserService = exports.CrudService = exports.DJContainer = void 0;
var types_1 = require("../types");
var inversify_1 = require("inversify");
var crud_1 = require("./crud");
Object.defineProperty(exports, "CrudService", { enumerable: true, get: function () { return crud_1.CrudService; } });
var book_1 = require("./crud/book");
Object.defineProperty(exports, "BookService", { enumerable: true, get: function () { return book_1.BookService; } });
var user_1 = require("./crud/user");
Object.defineProperty(exports, "UserService", { enumerable: true, get: function () { return user_1.UserService; } });
var image_1 = require("./crud/image");
Object.defineProperty(exports, "ImageService", { enumerable: true, get: function () { return image_1.ImageService; } });
var author_1 = require("./crud/author");
Object.defineProperty(exports, "AuthorService", { enumerable: true, get: function () { return author_1.AuthorService; } });
var publishing_1 = require("./crud/publishing");
Object.defineProperty(exports, "PublishingService", { enumerable: true, get: function () { return publishing_1.PublishingService; } });
var category_1 = require("./crud/category");
Object.defineProperty(exports, "CategoryService", { enumerable: true, get: function () { return category_1.CategoryService; } });
var invalidToken_1 = require("./crud/invalidToken");
Object.defineProperty(exports, "InvalidTokenService", { enumerable: true, get: function () { return invalidToken_1.InvalidTokenService; } });
var error_1 = require("./error");
var token_1 = require("./token");
var util_1 = require("./util");
var firebase_1 = require("./firebase");
var DJContainer = new inversify_1.Container();
exports.DJContainer = DJContainer;
DJContainer.bind(types_1.TYPES.IErrorService).to(error_1.ErrorService);
DJContainer.bind(types_1.TYPES.ITokenService).to(token_1.TokenService);
DJContainer.bind(types_1.TYPES.IUtilService).to(util_1.UtilService);
DJContainer.bind(types_1.TYPES.IFireBaseService).to(firebase_1.FireBaseService);
DJContainer.bind(types_1.TYPES.UserService).toConstantValue(new user_1.UserService());
DJContainer.bind(types_1.TYPES.BookService).toConstantValue(new book_1.BookService());
DJContainer.bind(types_1.TYPES.ImageService).toConstantValue(new image_1.ImageService());
DJContainer.bind(types_1.TYPES.AuthorService).toConstantValue(new author_1.AuthorService());
DJContainer.bind(types_1.TYPES.PublishingService).toConstantValue(new publishing_1.PublishingService());
DJContainer.bind(types_1.TYPES.CategoryService).toConstantValue(new category_1.CategoryService());
DJContainer.bind(types_1.TYPES.InvalidTokenService).toConstantValue(new invalidToken_1.InvalidTokenService());
//# sourceMappingURL=index.js.map